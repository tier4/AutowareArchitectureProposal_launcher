<launch>
  <!-- planning module -->

  <!-- pointcloud container -->
  <arg name="use_pointcloud_container" default="false"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>
  <arg name="cruise_planner_type" default="obstacle_stop_planner"/>

  <group>
    <push-ros-namespace namespace="planning"/>
    <!-- mission planning module -->
    <group>
      <push-ros-namespace namespace="mission_planning"/>
      <include file="$(find-pkg-share planning_launch)/launch/mission_planning/mission_planning.launch.xml"/>
    </group>

    <!-- scenario planning module -->
    <group>
      <push-ros-namespace namespace="scenario_planning"/>
      <include file="$(find-pkg-share planning_launch)/launch/scenario_planning/scenario_planning.launch.xml">
        <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
        <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
        <arg name="cruise_planner_type" value="$(var cruise_planner_type)" />
      </include>
    </group>

    <!-- planning validator -->
    <group>
      <include file="$(find-pkg-share planning_validator)/launch/planning_validator.launch.xml">
        <arg name="planning_validator_param_path" value="$(find-pkg-share planning_launch)/config/planning_validator/planning_validator.param.yaml" />
        <arg name="input_trajectory" value="/planning/scenario_planning/motion_velocity_smoother/trajectory" />
        <arg name="output_trajectory" value="/planning/scenario_planning/trajectory" />
      </include>
    </group>
  </group>
</launch>
